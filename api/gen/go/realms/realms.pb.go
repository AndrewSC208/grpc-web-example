// Code generated by protoc-gen-go. DO NOT EDIT.
// source: realms/realms.proto

package realms_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewRealmRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewRealmRequest) Reset()         { *m = NewRealmRequest{} }
func (m *NewRealmRequest) String() string { return proto.CompactTextString(m) }
func (*NewRealmRequest) ProtoMessage()    {}
func (*NewRealmRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d18d48f8c2660c1d, []int{0}
}

func (m *NewRealmRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRealmRequest.Unmarshal(m, b)
}
func (m *NewRealmRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRealmRequest.Marshal(b, m, deterministic)
}
func (m *NewRealmRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRealmRequest.Merge(m, src)
}
func (m *NewRealmRequest) XXX_Size() int {
	return xxx_messageInfo_NewRealmRequest.Size(m)
}
func (m *NewRealmRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRealmRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewRealmRequest proto.InternalMessageInfo

func (m *NewRealmRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *NewRealmRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Realm struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Realm) Reset()         { *m = Realm{} }
func (m *Realm) String() string { return proto.CompactTextString(m) }
func (*Realm) ProtoMessage()    {}
func (*Realm) Descriptor() ([]byte, []int) {
	return fileDescriptor_d18d48f8c2660c1d, []int{1}
}

func (m *Realm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Realm.Unmarshal(m, b)
}
func (m *Realm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Realm.Marshal(b, m, deterministic)
}
func (m *Realm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Realm.Merge(m, src)
}
func (m *Realm) XXX_Size() int {
	return xxx_messageInfo_Realm.Size(m)
}
func (m *Realm) XXX_DiscardUnknown() {
	xxx_messageInfo_Realm.DiscardUnknown(m)
}

var xxx_messageInfo_Realm proto.InternalMessageInfo

func (m *Realm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Realm) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Realm) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Realms struct {
	Realms               []*Realm `protobuf:"bytes,1,rep,name=Realms,proto3" json:"Realms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Realms) Reset()         { *m = Realms{} }
func (m *Realms) String() string { return proto.CompactTextString(m) }
func (*Realms) ProtoMessage()    {}
func (*Realms) Descriptor() ([]byte, []int) {
	return fileDescriptor_d18d48f8c2660c1d, []int{2}
}

func (m *Realms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Realms.Unmarshal(m, b)
}
func (m *Realms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Realms.Marshal(b, m, deterministic)
}
func (m *Realms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Realms.Merge(m, src)
}
func (m *Realms) XXX_Size() int {
	return xxx_messageInfo_Realms.Size(m)
}
func (m *Realms) XXX_DiscardUnknown() {
	xxx_messageInfo_Realms.DiscardUnknown(m)
}

var xxx_messageInfo_Realms proto.InternalMessageInfo

func (m *Realms) GetRealms() []*Realm {
	if m != nil {
		return m.Realms
	}
	return nil
}

type Id struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_d18d48f8c2660c1d, []int{3}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Query struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_d18d48f8c2660c1d, []int{4}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func init() {
	proto.RegisterType((*NewRealmRequest)(nil), "realms.v1.NewRealmRequest")
	proto.RegisterType((*Realm)(nil), "realms.v1.Realm")
	proto.RegisterType((*Realms)(nil), "realms.v1.Realms")
	proto.RegisterType((*Id)(nil), "realms.v1.Id")
	proto.RegisterType((*Query)(nil), "realms.v1.Query")
}

func init() { proto.RegisterFile("realms/realms.proto", fileDescriptor_d18d48f8c2660c1d) }

var fileDescriptor_d18d48f8c2660c1d = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0xe5, 0xa4, 0x31, 0xea, 0xf1, 0xff, 0xa8, 0x50, 0x94, 0x29, 0xf2, 0x94, 0x0a, 0x29,
	0x88, 0x74, 0x66, 0x40, 0x74, 0xc9, 0x82, 0x84, 0x11, 0x0f, 0x10, 0xea, 0x1b, 0x22, 0xb5, 0x4d,
	0xb1, 0x93, 0x22, 0x5e, 0x90, 0xe7, 0x42, 0x71, 0x0c, 0x8a, 0x0c, 0x43, 0x27, 0xdf, 0xe7, 0xfb,
	0xee, 0xbb, 0x9f, 0x65, 0xb8, 0xd2, 0x54, 0xad, 0x37, 0xe6, 0x76, 0x38, 0xf2, 0x9d, 0x6e, 0xda,
	0x06, 0xa7, 0x4e, 0xed, 0xef, 0xc4, 0x3d, 0x9c, 0x3f, 0xd1, 0x87, 0xec, 0xb5, 0xa4, 0xf7, 0x8e,
	0x4c, 0x8b, 0xd7, 0xc0, 0x3b, 0x43, 0xba, 0x5c, 0xc6, 0x2c, 0x65, 0xd9, 0x54, 0x3a, 0x85, 0x08,
	0x93, 0x6d, 0xb5, 0xa1, 0x38, 0xb0, 0xb7, 0xb6, 0x16, 0x0f, 0x10, 0xd9, 0x59, 0x3c, 0x83, 0xa0,
	0x56, 0x6e, 0x20, 0xa8, 0xd5, 0x7f, 0x66, 0x9c, 0x41, 0xb4, 0x6a, 0xba, 0x6d, 0x1b, 0x87, 0x29,
	0xcb, 0x42, 0x39, 0x08, 0x51, 0x00, 0xb7, 0x11, 0x06, 0xb3, 0x9f, 0x2a, 0x66, 0x69, 0x98, 0x1d,
	0x17, 0x17, 0xf9, 0x2f, 0x67, 0x3e, 0x10, 0xba, 0xbe, 0x98, 0x41, 0x50, 0x2a, 0x7f, 0xa7, 0x38,
	0x82, 0xe8, 0xb9, 0x23, 0xfd, 0x59, 0x7c, 0x31, 0x38, 0xb1, 0xce, 0x17, 0xd2, 0xfb, 0x7a, 0x45,
	0xb8, 0x00, 0xfe, 0xa8, 0xa9, 0x6a, 0x09, 0x93, 0x51, 0xa6, 0xf7, 0xf0, 0xe4, 0x74, 0xd4, 0x2b,
	0x15, 0xde, 0xc0, 0x44, 0x52, 0xa5, 0x70, 0x8c, 0x61, 0xf3, 0x93, 0x4b, 0x1f, 0xcc, 0xe0, 0x1c,
	0xf8, 0xeb, 0x4e, 0xf5, 0x1b, 0xfe, 0x50, 0xfb, 0xb9, 0x73, 0xe0, 0x4b, 0x5a, 0xd3, 0x01, 0xd6,
	0x37, 0x6e, 0xff, 0x6b, 0xf1, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x1d, 0x3b, 0xf3, 0xc6, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RealmServiceClient is the client API for RealmService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RealmServiceClient interface {
	// Create a realm for a user
	Create(ctx context.Context, in *NewRealmRequest, opts ...grpc.CallOption) (*Id, error)
	//
	Read(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Realms, error)
	Update(ctx context.Context, in *Realm, opts ...grpc.CallOption) (*Id, error)
	Delete(ctx context.Context, in *Realm, opts ...grpc.CallOption) (*Id, error)
}

type realmServiceClient struct {
	cc *grpc.ClientConn
}

func NewRealmServiceClient(cc *grpc.ClientConn) RealmServiceClient {
	return &realmServiceClient{cc}
}

func (c *realmServiceClient) Create(ctx context.Context, in *NewRealmRequest, opts ...grpc.CallOption) (*Id, error) {
	out := new(Id)
	err := c.cc.Invoke(ctx, "/realms.v1.RealmService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *realmServiceClient) Read(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Realms, error) {
	out := new(Realms)
	err := c.cc.Invoke(ctx, "/realms.v1.RealmService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *realmServiceClient) Update(ctx context.Context, in *Realm, opts ...grpc.CallOption) (*Id, error) {
	out := new(Id)
	err := c.cc.Invoke(ctx, "/realms.v1.RealmService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *realmServiceClient) Delete(ctx context.Context, in *Realm, opts ...grpc.CallOption) (*Id, error) {
	out := new(Id)
	err := c.cc.Invoke(ctx, "/realms.v1.RealmService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RealmServiceServer is the server API for RealmService service.
type RealmServiceServer interface {
	// Create a realm for a user
	Create(context.Context, *NewRealmRequest) (*Id, error)
	//
	Read(context.Context, *Query) (*Realms, error)
	Update(context.Context, *Realm) (*Id, error)
	Delete(context.Context, *Realm) (*Id, error)
}

// UnimplementedRealmServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRealmServiceServer struct {
}

func (*UnimplementedRealmServiceServer) Create(ctx context.Context, req *NewRealmRequest) (*Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRealmServiceServer) Read(ctx context.Context, req *Query) (*Realms, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedRealmServiceServer) Update(ctx context.Context, req *Realm) (*Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedRealmServiceServer) Delete(ctx context.Context, req *Realm) (*Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterRealmServiceServer(s *grpc.Server, srv RealmServiceServer) {
	s.RegisterService(&_RealmService_serviceDesc, srv)
}

func _RealmService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRealmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RealmServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/realms.v1.RealmService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RealmServiceServer).Create(ctx, req.(*NewRealmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RealmService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RealmServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/realms.v1.RealmService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RealmServiceServer).Read(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _RealmService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Realm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RealmServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/realms.v1.RealmService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RealmServiceServer).Update(ctx, req.(*Realm))
	}
	return interceptor(ctx, in, info, handler)
}

func _RealmService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Realm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RealmServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/realms.v1.RealmService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RealmServiceServer).Delete(ctx, req.(*Realm))
	}
	return interceptor(ctx, in, info, handler)
}

var _RealmService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "realms.v1.RealmService",
	HandlerType: (*RealmServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RealmService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _RealmService_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RealmService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _RealmService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "realms/realms.proto",
}
